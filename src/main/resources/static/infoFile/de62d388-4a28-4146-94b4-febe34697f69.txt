@ 프로젝트당 1 레파지토리! .. 저장소 이름과 프로젝트 이름은 동일한게 좋음.

깃 허브 작업 순서(처음 깃허브에 파일을 올릴 때)

1. git hub 사이트에서 원격 레포지토리 (remote repository) 생성
2. 로컬 레포지토리 (local repository) 생성
	2-1. 로컬 레포지토리로 사용할 폴더를 생성
	2-2. 해당 폴더에 들어가서 우측클릭 -> git bash here 실행 ( 이클립스 프로젝트 우클릭 -> show in local  terminal 에도 있음 )
	2-3. (pc당 최초 한번만) git 사용자 지정
	2-3-1. git config --global user.name -> 현재 pc의 계정 확인
	2-3-2. git config --global user.name "계정명" -> 현재 pc의 계정 변경
	2-3-3. git config --global user.email -> 현재 pc의 이메일 확인
	2-3-4. git config --global user.email "메일주소" -> 현재 pc의 메일 변경

	2-4. git init 명령어 실행시 해당 폴더가 Local repository 가 됨.
3. 원격 저장소와 로컬저장소를 연결
	git remote add origin 원격저장소url // <github에 올릴 https 주소>
4. 지역 저장소에 데이터를 저장(변경, 추가, 삭제)
	4-1. 변경될 내용들을 장바구니에 담는다. git add . // dot 대신 파일명 가능
	4-2. 장바구니에 담은 파일을 지역 저장소에 저장시킨다.
		git commit -m "커밋메세지" 
5. 원격 저장소에 데이터를 저장
	git push origin master

* 한번 깃허브와 연결 됬으면 4~5번만 반복하면 된다.
* 파일 삭제 또한 깃허브에 동기화 해 주어야 함.
* 지역저장소 연결 끊는방법은 숨김파일인 .git 을 그냥 삭제하면 된다.

@@ 집(다른pc) 연동
깃 허브에 있는 데이터 내려 받기(최초에 딱 한번)
1. 내려받고 싶은 폴더에서 git bash 실행
2. git clone 원격저장소url -> 원격 저장소 이름대로 파일 가져 옴.
, 만약 폴더 명을 바꾸고 싶다면
git clone 원격저장소url 폴더명

@@ 강의실로 가져오기
깃 허브에 있는 데이터 내려 받기(최초 이 후..) 
1. 내려받고 싶은 폴더에서 git bash 실행
2. git pull origin master 실행




# 이후에 집, 강의실에서 반복하는 명령어
1. git pull origin master
2. 코드 작업~~!
3. 작업한 내용 올리기 -> git add .
4. git commit -m "작업 내용 코멘트"
5. git push origin master

1시방향 perspective 'java' 에서 작업, 'git' 은 x


@@@@@@@@@@@@ 충돌 주의 @@@@@@@@@@@@@@@@@@@


## 이클립스 내에서 깃허브 연결 및 올리기.
해당 프로젝트 우클릭 -> team -> share project --> 지역저장소 생성
이후 1시방향 git perspective로 이동
해당 프로젝트 펼쳐서 Remotes -> create Remote -> create -> url을 깃허브 내 https 주소로 변경 후 save
이후 java perspective 로 이동

해당 프로젝트 우클릭 -> team -> synchronize project
원격 저장소에서 내려받을거 -> incoming
언격 저장소로 올려보낼거 -> outcoming --> ++ 누르고 코멘트 작성 후 commit or commit and push





## 집에서 ?
1시 open perspective -> git 이후
왼쪽의 3번쨰 아이콘 clone a git repository 클릭
가져올 github url 설정 후 next next 후 저장할 brower(home) 위치 설정 --> 지역 저장소로 설정됨.
위의 결과로 폴더에 파일이 복사가 됨.

import -> 2번쨰 -> brower -> 가져온 폴더
--> import 안되면 11시 file
open project file~~ 에서 가져오고
--> 안되면
import 맨밑에 project from folder or archive에서 가져오고

해당 프로젝트 우클릭 -> configure -> add gradle nature
 git clone https://github.com/ILDOO0609/TeamTest2.git ---> 깃헙에서 복사할 프로젝트 bash에서 실행

집에서 -> 깃헙 올리기
프로젝트 -> 싱크로나이즈 프로젝트
git staging view창 오픈
outgoing mode


### branch 작업하기 >> 2명의 개발자가 작업? --> master 는 두고, test1에 개발자1, test2에 개발자2가 작업하고 작업 다 된걸 dev에 붙히고 문제없음 master로.
git branch : 현재 branch 목록을 나타내고 현재 사용중인 branch 앞에 * 표기.

git branch branch명 : branch 생성 // ex ) git branch test1
git checkout branch명 : 이동할 branch명 // ex ) git checkout test1
-- 생성과 이동 동시에 하는법
git checkout -b 생성할 브랜치명
-- 브랜치 삭제
git branch -d 삭제할브랜치명


-- 병합(merge)

git merge branch명


@@ 브런치 변경 후 pull 받고 작업!!

git branch test1
git checkout test1
git pull origin dev
// 소스작업
git add.
git commit -m ""
git checkout dev
git merge test1
git push origin dev

git branch-d test1 ?

// 마스터 작업은 한명만
git checkout master
git merge dev
git push origin master



