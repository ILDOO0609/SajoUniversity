<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="memberMapper">
	
	<resultMap type="com.study.test.member.vo.MemberVO" id="member">
			<id		column="MEM_NO" 					 	property="memNo"/>
			<result column="MEM_PW"						 	property="memPw"/>
			<result column="MEM_PW_UPDATE"					property="memPwUpdate"/>
			<result column="MEM_NAME"						 property="memName"/>
			<result column="MEM_GENDER" 					 property="memGender"/>
			<result column="MEM_TELL" 						 property="memTell"/>
			<result column="MEM_ADDR" 						 property="memAddr"/>
			<result column="MEM_ADDR_DETAIL" 				 property="memAddrDetail"/>
			<result column="MEM_ROLE" 						 property="memRole"/>
			<result column="MEM_BIRTHDAY" 					 property="memBirthday"/>
			<result column="MEM_EMAIL" 						 property="memEmail"/>
			<result column="MEM_IMAGE" 					 	property="memImage"/>
			<result column="MEM_QUEST" 					 	property="memQuest"/>
			<result column="REG_DATE" 					 	property="regDate"/>
			<result column="MEM_SEARCH" 					 property="searchValue"/>
			<result column="IS_CONFIRMED" 					 property="isConfirmed"/>
		</resultMap>
		
		
	<resultMap type="com.study.test.member.vo.StatisticsVO" id="statistics">
		<result column="MONTH_01" property="month_01"/>
		<result column="MONTH_02" property="month_02"/>
		<result column="MONTH_03" property="month_03"/>
		<result column="MONTH_04" property="month_04"/>
		<result column="MONTH_05" property="month_05"/>
		<result column="MONTH_06" property="month_06"/>
		<result column="MONTH_07" property="month_07"/>
		<result column="MONTH_08" property="month_08"/>
		<result column="MONTH_09" property="month_09"/>
		<result column="MONTH_10" property="month_10"/>
		<result column="MONTH_11" property="month_11"/>
		<result column="MONTH_12" property="month_12"/>
	</resultMap>
		
		
		
		<!-- security 로그인 -->
		<select id="login" resultMap="member">
			SELECT MEM_NO
				,	MEM_PW
				,	MEM_ROLE
			FROM MEMBER
			WHERE MEM_NO = #{memNo}
		</select>
		
		<!-- 비밀번호변경 유무 확인 -->
		<select id="checkMemPw">
			SELECT MEM_PW_UPDATE
			FROM MEMBER
		</select>
		
		<!-- 회원정보 -->
		<select id="loginInfo" resultMap="member">
			SELECT MEM_NO
				,	MEM_PW
				,	MEM_NAME
				,	MEM_GENDER
				,	MEM_TELL
				,	MEM_ADDR
				,	MEM_ADDR_DETAIL
				,	MEM_ROLE
				,	MEM_BIRTHDAY
				,	MEM_EMAIL
				,	MEM_IMAGE
			FROM MEMBER
			WHERE MEM_NAME = #{memName}
			AND MEM_EMAIL = #{memEmail}
		</select>
		
		
		
		<!-- 회원등록시 번호 중복 체크 -->
		<select id="isDuplicateMemNo" resultType="int">
			SELECT COUNT(MEM_NO)
			FROM MEMBER
			WHERE MEM_NO = #{memNo}
		</select>
		
		
		<!-- 회원가입  -->
      <insert id="join">
      INSERT INTO MEMBER (
          MEM_NO,
          MEM_PW,
          MEM_NAME,
          MEM_GENDER,
          MEM_TELL,
          MEM_ADDR,
          MEM_ADDR_DETAIL,
          MEM_ROLE,
          MEM_BIRTHDAY,
          MEM_EMAIL,
          MEM_IMAGE,
          MEM_QUEST
      ) VALUES (
          #{memNo},
          #{memPw},
          #{memName},
          #{memGender},
          REPLACE(
            <foreach collection="memTells" item="tell" open="'" separator="-" close="'">
               ${tell}
            </foreach>, ' ', ''),
          
          #{memAddr},
          #{memAddrDetail},
          #{memRole},
          #{memBirthday},
          #{memEmail},
          #{memImage},
          #{memQuest}
      )
      </insert>
	
		<!-- 이메일 전송 - 비밀번호 -->
		<select id="getMemEmail" resultType="String">
			SELECT MEM_EMAIL
			FROM MEMBER
			WHERE MEM_NO = #{memNo}
			AND MEM_NAME = #{memName}
			AND MEM_QUEST = #{memQuest}
		</select>
		
		<!-- 비밀번호 변경 -->
		<update id="updateMemPw">
			UPDATE MEMBER
			SET
				MEM_PW = #{memPw},
				MEM_PW_UPDATE = 'Y'
			WHERE MEM_NO = #{memNo}
			AND MEM_NAME = #{memName}
			
		</update>
		
		<!-- 이메일 전송 - 아이디 -->
		<select id="getMemEmail2" resultType="String">
			SELECT MEM_EMAIL
			FROM MEMBER
			WHERE MEM_NAME = #{memName}
			AND MEM_EMAIL = #{memEmail}
		</select>
	
	
	    <!-- 학생 정보 조회용 -->
		<select id="getMemInfoForStu" resultMap="member">
			SELECT MEM_NO
				, MEM_PW
				, MEM_NAME
				, MEM_EMAIL
				, MEM_ADDR
				, MEM_ADDR_DETAIL
				, MEM_TELL
				, MEM_IMAGE
				, MEM_GENDER
				, MEM_BIRTHDAY
				, MEM_ROLE
				, MEM_QUEST
			FROM MEMBER
			WHERE MEM_NO = #{memNo}
		</select>
		
		<!-- 학생 정보 조회용 -->
		<update id="updateStuInfo">
			UPDATE MEMBER
			SET MEM_NAME = #{memName}
			    , MEM_EMAIL = #{memEmail}
			    , MEM_TELL = #{memTell}
			    , MEM_ADDR = #{memAddr}
			    , MEM_ADDR_DETAIL = #{memAddrDetail}
			WHERE MEM_NO = #{memNo}
		</update>
		
		<!-- 월별통계 MAP-->
		<select id="getMonthlyData2" resultType="HashMap">
			SELECT NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '01', 1, 0)), 0) AS MONTH_01
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '02', 1, 0)), 0) AS MONTH_02
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '03', 1, 0)), 0) AS MONTH_03
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '04', 1, 0)), 0) AS MONTH_04
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '05', 1, 0)), 0) AS MONTH_05
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '06', 1, 0)), 0) AS MONTH_06
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '07', 1, 0)), 0) AS MONTH_07
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '08', 1, 0)), 0) AS MONTH_08
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '09', 1, 0)), 0) AS MONTH_09
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '10', 1, 0)), 0) AS MONTH_10
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '11', 1, 0)), 0) AS MONTH_11
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '12', 1, 0)), 0) AS MONTH_12
			FROM MEMBER
			WHERE TO_CHAR(REG_DATE, 'YYYY') = #{year}
			AND MEM_ROLE = 'stu'
		</select>
		
		<select id="getMonthlyData" resultMap="statistics">
			SELECT NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '01', 1, 0)), 0) AS MONTH_01
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '02', 1, 0)), 0) AS MONTH_02
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '03', 1, 0)), 0) AS MONTH_03
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '04', 1, 0)), 0) AS MONTH_04
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '05', 1, 0)), 0) AS MONTH_05
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '06', 1, 0)), 0) AS MONTH_06
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '07', 1, 0)), 0) AS MONTH_07
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '08', 1, 0)), 0) AS MONTH_08
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '09', 1, 0)), 0) AS MONTH_09
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '10', 1, 0)), 0) AS MONTH_10
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '11', 1, 0)), 0) AS MONTH_11
			, NVL(SUM(DECODE(TO_CHAR(REG_DATE, 'MM'), '12', 1, 0)), 0) AS MONTH_12
			FROM MEMBER
			WHERE TO_CHAR(REG_DATE, 'YYYY') = #{year}
			AND MEM_ROLE = 'stu'
		</select>
		
		<select id="getMonthlyData_02" resultType="HashMap">
			SELECT NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '01', 1, 0)), 0) AS MONTH_01
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '02', 1, 0)), 0) AS MONTH_02
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '03', 1, 0)), 0) AS MONTH_03
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '04', 1, 0)), 0) AS MONTH_04
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '05', 1, 0)), 0) AS MONTH_05
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '06', 1, 0)), 0) AS MONTH_06
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '07', 1, 0)), 0) AS MONTH_07
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '08', 1, 0)), 0) AS MONTH_08
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '09', 1, 0)), 0) AS MONTH_09
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '10', 1, 0)), 0) AS MONTH_10
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '11', 1, 0)), 0) AS MONTH_11
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '12', 1, 0)), 0) AS MONTH_12
			FROM STATUS_INFO
			WHERE TO_CHAR(APPROVAL_DATE, 'YYYY') = #{year}
			AND NOW_STATUS = '2'
		</select>
		
		<select id="getMonthlyData_2" resultMap="statistics">
			SELECT NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '01', 1, 0)), 0) AS MONTH_01
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '02', 1, 0)), 0) AS MONTH_02
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '03', 1, 0)), 0) AS MONTH_03
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '04', 1, 0)), 0) AS MONTH_04
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '05', 1, 0)), 0) AS MONTH_05
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '06', 1, 0)), 0) AS MONTH_06
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '07', 1, 0)), 0) AS MONTH_07
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '08', 1, 0)), 0) AS MONTH_08
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '09', 1, 0)), 0) AS MONTH_09
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '10', 1, 0)), 0) AS MONTH_10
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '11', 1, 0)), 0) AS MONTH_11
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '12', 1, 0)), 0) AS MONTH_12
			FROM STATUS_INFO
			WHERE TO_CHAR(APPROVAL_DATE, 'YYYY') = #{year}
			AND NOW_STATUS = '2'
		</select>
		
		<select id="getMonthlyData_03" resultType="HashMap">
			SELECT NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '01', 1, 0)), 0) AS MONTH_01
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '02', 1, 0)), 0) AS MONTH_02
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '03', 1, 0)), 0) AS MONTH_03
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '04', 1, 0)), 0) AS MONTH_04
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '05', 1, 0)), 0) AS MONTH_05
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '06', 1, 0)), 0) AS MONTH_06
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '07', 1, 0)), 0) AS MONTH_07
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '08', 1, 0)), 0) AS MONTH_08
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '09', 1, 0)), 0) AS MONTH_09
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '10', 1, 0)), 0) AS MONTH_10
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '11', 1, 0)), 0) AS MONTH_11
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '12', 1, 0)), 0) AS MONTH_12
			FROM STATUS_INFO
			WHERE TO_CHAR(APPROVAL_DATE, 'YYYY') = #{year}
			AND NOW_STATUS = '3'
		</select>
		
		<select id="getMonthlyData_3" resultMap="statistics">
			SELECT NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '01', 1, 0)), 0) AS MONTH_01
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '02', 1, 0)), 0) AS MONTH_02
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '03', 1, 0)), 0) AS MONTH_03
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '04', 1, 0)), 0) AS MONTH_04
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '05', 1, 0)), 0) AS MONTH_05
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '06', 1, 0)), 0) AS MONTH_06
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '07', 1, 0)), 0) AS MONTH_07
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '08', 1, 0)), 0) AS MONTH_08
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '09', 1, 0)), 0) AS MONTH_09
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '10', 1, 0)), 0) AS MONTH_10
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '11', 1, 0)), 0) AS MONTH_11
			, NVL(SUM(DECODE(TO_CHAR(APPROVAL_DATE, 'MM'), '12', 1, 0)), 0) AS MONTH_12
			FROM STATUS_INFO
			WHERE TO_CHAR(APPROVAL_DATE, 'YYYY') = #{year}
			AND NOW_STATUS = '3'
		</select>
		
		
</mapper>



























